// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import {Test} from "forge-std/Test.sol";
import {FormatLib} from "src/libraries/FormatLib.sol";

/// @author philogy <https://github.com/philogy>
contract FormatLibTest is Test {
    function test_toString() public pure {
        assertEq(FormatLib.toStr(uint256(0)), "0");
        assertEq(FormatLib.toStr(uint256(1)), "1");
        assertEq(FormatLib.toStr(uint256(2)), "2");
        assertEq(FormatLib.toStr(uint256(3)), "3");
        assertEq(FormatLib.toStr(uint256(4)), "4");
        assertEq(FormatLib.toStr(uint256(5)), "5");
        assertEq(FormatLib.toStr(uint256(6)), "6");
        assertEq(FormatLib.toStr(uint256(7)), "7");
        assertEq(FormatLib.toStr(uint256(8)), "8");
        assertEq(FormatLib.toStr(uint256(9)), "9");

        assertEq(
            FormatLib.toStr(uint256(30344468101417079512449245906979322062007167384479610257370095129364965072497)),
            "30344468101417079512449245906979322062007167384479610257370095129364965072497"
        );
        assertEq(
            FormatLib.toStr(uint256(89091654759049762561884329952285323574303355726105321787551370929325208233379)),
            "89091654759049762561884329952285323574303355726105321787551370929325208233379"
        );
        assertEq(
            FormatLib.toStr(uint256(35806945917469276467254335441257425062581458687434648936889056239109881922474)),
            "35806945917469276467254335441257425062581458687434648936889056239109881922474"
        );
        assertEq(
            FormatLib.toStr(uint256(74354053083129527022168218146127689749214401189205493395503168675425084765531)),
            "74354053083129527022168218146127689749214401189205493395503168675425084765531"
        );
        assertEq(
            FormatLib.toStr(uint256(99027432796956080985806486817578641925647684530402891077052523987755156092762)),
            "99027432796956080985806486817578641925647684530402891077052523987755156092762"
        );
        assertEq(
            FormatLib.toStr(uint256(66495178828222967101631909865656667153140511017753553222668946185871469988300)),
            "66495178828222967101631909865656667153140511017753553222668946185871469988300"
        );
        assertEq(
            FormatLib.toStr(uint256(1115067137847110247608630313016824641548046050900560056011082493825040955799)),
            "1115067137847110247608630313016824641548046050900560056011082493825040955799"
        );
        assertEq(
            FormatLib.toStr(uint256(50124252718512380823969065006680323084091111584200630742992468529996883324357)),
            "50124252718512380823969065006680323084091111584200630742992468529996883324357"
        );
        assertEq(
            FormatLib.toStr(uint256(34626389213469715840056258250815720347779499677716045597339361873381142828412)),
            "34626389213469715840056258250815720347779499677716045597339361873381142828412"
        );
        assertEq(
            FormatLib.toStr(uint256(90473878667355056203473763448360319136101222449404315456933478028798206675497)),
            "90473878667355056203473763448360319136101222449404315456933478028798206675497"
        );
        assertEq(
            FormatLib.toStr(uint256(3241920616891170690068403280916962009924749144262386560530290556643496992140)),
            "3241920616891170690068403280916962009924749144262386560530290556643496992140"
        );
        assertEq(
            FormatLib.toStr(uint256(98729937282398803062235110459389203281946864788268255927270778488521579776395)),
            "98729937282398803062235110459389203281946864788268255927270778488521579776395"
        );
        assertEq(
            FormatLib.toStr(uint256(92547327695486443625358805485453444489806478751820564626603654083985257831502)),
            "92547327695486443625358805485453444489806478751820564626603654083985257831502"
        );
        assertEq(
            FormatLib.toStr(uint256(19689404291756833385756860330948600757053561255234992682007443361334506380771)),
            "19689404291756833385756860330948600757053561255234992682007443361334506380771"
        );
        assertEq(
            FormatLib.toStr(uint256(24006932002526196116611453803669976764252666642462402254587935198089315166569)),
            "24006932002526196116611453803669976764252666642462402254587935198089315166569"
        );
        assertEq(
            FormatLib.toStr(uint256(93215003723649175571725558419684965253360827162926833277670219330364105512837)),
            "93215003723649175571725558419684965253360827162926833277670219330364105512837"
        );
        assertEq(
            FormatLib.toStr(uint256(96230868828998905733263329725809700251231881644282071681207447866406309505607)),
            "96230868828998905733263329725809700251231881644282071681207447866406309505607"
        );
        assertEq(
            FormatLib.toStr(uint256(75211747500480611698017105206285397696431017435363390796777751898034156200222)),
            "75211747500480611698017105206285397696431017435363390796777751898034156200222"
        );
        assertEq(
            FormatLib.toStr(uint256(97865019460881829041023399932532452311577445542900190309344911933338112328826)),
            "97865019460881829041023399932532452311577445542900190309344911933338112328826"
        );
        assertEq(
            FormatLib.toStr(uint256(30808822620652093788076135404570752770474732480963698477994449539200300985735)),
            "30808822620652093788076135404570752770474732480963698477994449539200300985735"
        );

        assertEq(FormatLib.toStr(uint256(5498)), "5498");
        assertEq(FormatLib.toStr(uint256(9453)), "9453");
        assertEq(FormatLib.toStr(uint256(113)), "113");
        assertEq(FormatLib.toStr(uint256(3884)), "3884");
        assertEq(FormatLib.toStr(uint256(6322)), "6322");
        assertEq(FormatLib.toStr(uint256(6093)), "6093");
        assertEq(FormatLib.toStr(uint256(2787)), "2787");
        assertEq(FormatLib.toStr(uint256(3332)), "3332");
        assertEq(FormatLib.toStr(uint256(6212)), "6212");
        assertEq(FormatLib.toStr(uint256(3095)), "3095");
        assertEq(FormatLib.toStr(uint256(6455)), "6455");
        assertEq(FormatLib.toStr(uint256(1299)), "1299");
        assertEq(FormatLib.toStr(uint256(8856)), "8856");
        assertEq(FormatLib.toStr(uint256(6505)), "6505");
        assertEq(FormatLib.toStr(uint256(7420)), "7420");
        assertEq(FormatLib.toStr(uint256(4515)), "4515");
        assertEq(FormatLib.toStr(uint256(8272)), "8272");
        assertEq(FormatLib.toStr(uint256(3708)), "3708");
        assertEq(FormatLib.toStr(uint256(6375)), "6375");
        assertEq(FormatLib.toStr(uint256(9535)), "9535");
    }

    function test_fmtD() public pure {
        assertEq(FormatLib.fmtD(uint256(1.12e18)), "1.120000");
        assertEq(FormatLib.fmtD(uint256(0)), "0.000000");
        assertEq(FormatLib.fmtD(uint256(1.9999999e18)), "2.000000");
    }
}
